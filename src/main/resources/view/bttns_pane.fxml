<?xml version="1.0" encoding="UTF-8"?>

<?import com.jfoenix.controls.JFXButton?>
<?import com.jfoenix.controls.JFXCheckBox?>
<?import com.jfoenix.controls.JFXRadioButton?>
<?import com.jfoenix.controls.JFXToggleButton?>
<?import java.lang.String?>
<?import javafx.geometry.Insets?>
<?import javafx.scene.control.Button?>
<?import javafx.scene.control.CheckBox?>
<?import javafx.scene.control.ChoiceBox?>
<?import javafx.scene.control.Label?>
<?import javafx.scene.control.RadioButton?>
<?import javafx.scene.control.ScrollPane?>
<?import javafx.scene.control.Separator?>
<?import javafx.scene.control.ToggleButton?>
<?import javafx.scene.control.ToggleGroup?>
<?import javafx.scene.layout.AnchorPane?>
<?import javafx.scene.layout.FlowPane?>
<?import javafx.scene.layout.HBox?>
<?import javafx.scene.layout.VBox?>
<?import javafx.scene.text.Text?>
<?import javafx.scene.text.TextFlow?>

<ScrollPane prefWidth="713.0" stylesheets="@../../../../lib/src/main/resources/assets/css/bootstrapfx.css" AnchorPane.bottomAnchor="0.0" AnchorPane.leftAnchor="0.0" AnchorPane.rightAnchor="0.0" AnchorPane.topAnchor="0.0" xmlns="http://javafx.com/javafx/8.0.111" xmlns:fx="http://javafx.com/fxml/1" fx:controller="demo.controller.Buttons">
    <VBox prefWidth="697.0">
        <Label styleClass="h1" text="Buttons" />
        <Separator prefWidth="200.0" />
        <Label text="Buttons communicate an action a user can take. They are typically placed throughout your UI, in places like dialogs, forms, cards, and toolbars. BootstrapFX includes predefined button styles, each serving its own semantic purpose with a few extras thrown in for more control and support for multiple sizes, states, and more." />
        <Label layoutX="10.0" layoutY="10.0" text="Button Tags"> <styleClass> <String fx:value="display-2" /> <String fx:value="display" /> </styleClass> </Label>
        <Separator layoutX="10.0" layoutY="47.0" prefWidth="200.0" />
        <Label layoutX="10.0" layoutY="10.0">
            <graphic>
                <TextFlow>
                    <Text strokeType="OUTSIDE" strokeWidth="0.0" text="There is no need to add the " />
                    <Label styleClass="code" text=".button" />
                    <Text layoutX="10.0" layoutY="10.0" strokeType="OUTSIDE" strokeWidth="0.0" text=" class as it is automatically added to the " />
                    <Label layoutX="35.0" layoutY="11.0" styleClass="text-bold" text="Button" />
                    <Text layoutX="81.0" layoutY="10.0" strokeType="OUTSIDE" strokeWidth="0.0" text=" control. However, you can use the contextual classes to apply a slightly different rendering to any " />
                    <Label layoutX="463.0" layoutY="11.0" styleClass="text-bold" text="Button." />
                </TextFlow>
            </graphic>
        </Label>
        <Label>
            <graphic>
                <TextFlow>
                    <Label layoutX="382.0" layoutY="10.0" text="This includes the: " />
                    <Label styleClass="code" text=".btn-primary, .btn-success, .btn-info, .btn-warning" />
                    <Label text=" and " />
                    <Label styleClass="code" text=".btn-danger" />
                    <Label layoutX="484.0" layoutY="10.0" text=" classes." />
                </TextFlow>
            </graphic>
        </Label>
        <Label layoutX="10.0" layoutY="1080.0" styleClass="display-3" text="Examples" />
        <HBox>
            <Button mnemonicParsing="false" text="Default" />
            <Button layoutX="10.0" layoutY="20.0" mnemonicParsing="false" styleClass="btn-primary" text="Primary" />
            <Button layoutX="10.0" layoutY="20.0" mnemonicParsing="false" styleClass="btn-success" text="Success" />
            <Button layoutX="67.0" layoutY="20.0" mnemonicParsing="false" styleClass="btn-info" text="Info" />
            <Button layoutX="10.0" layoutY="20.0" mnemonicParsing="false" styleClass="btn-warning" text="Warning" />
            <Button layoutX="67.0" layoutY="20.0" mnemonicParsing="false" styleClass="btn-danger" text="Danger" />
        </HBox>
        <VBox styleClass="blockquote">
            <Label styleClass="blockquote-heading" text="Conveying meaning" />
            <Label text="Using contextual colors adds meaning only to provide a visual indication. Ensure that information denoted by the color is either obvious from the content itself (e.g. the visible text)." />
        </VBox>
        <Label layoutX="10.0" layoutY="175.0" text="Outline Buttons"> <styleClass> <String fx:value="display-2" /> <String fx:value="display" /> </styleClass> </Label>
        <Separator layoutX="10.0" layoutY="227.0" prefWidth="200.0" />
        <Label layoutX="10.0" layoutY="238.0">
            <graphic>
                <TextFlow>
                    <Text strokeType="OUTSIDE" strokeWidth="0.0" text="In need of a button, but not with the hefty background colors they bring? BootstrapFX provides classes to replace the default modifier classes with the " />
                    <Label styleClass="code" text=".btn-outline-*" />
                    <Text layoutX="10.0" layoutY="10.0" strokeType="OUTSIDE" strokeWidth="0.0" text=" ones to remove all background images and colors on any button." />
                </TextFlow>
            </graphic>
        </Label>
        <Label layoutX="10.0" layoutY="233.0">
            <graphic>
                <TextFlow>
                    <Label layoutX="382.0" layoutY="10.0" text="This includes the: " />
                    <Label styleClass="code" text=".btn-outline-primary, .btn-outline-success, .btn-outline-info, .btn-outline-warning" />
                    <Label text=" and " />
                    <Label styleClass="code" text=".btn-outline-danger" />
                    <Label layoutX="484.0" layoutY="10.0" text=" classes." />
                </TextFlow>
            </graphic>
        </Label>
        <Label layoutX="10.0" layoutY="456.0" styleClass="display-3" text="Examples" />
        <HBox layoutX="10.0" layoutY="345.0">
            <Button layoutX="10.0" layoutY="20.0" mnemonicParsing="false" styleClass="btn-outline-primary" text="Primary" />
            <Button layoutX="10.0" layoutY="20.0" mnemonicParsing="false" styleClass="btn-outline-success" text="Success" />
            <Button layoutX="67.0" layoutY="20.0" mnemonicParsing="false" styleClass="btn-outline-info" text="Info" />
            <Button layoutX="10.0" layoutY="20.0" mnemonicParsing="false" styleClass="btn-outline-warning" text="Warning" />
            <Button layoutX="67.0" layoutY="20.0" mnemonicParsing="false" styleClass="btn-outline-danger" text="Danger" />
        </HBox>
        <Label layoutX="10.0" layoutY="479.0" text="Buttons Sizes"> <styleClass> <String fx:value="display-2" /> <String fx:value="display" /> </styleClass> </Label>
        <Separator layoutX="10.0" layoutY="531.0" prefWidth="200.0" />
        <Label text="Fancy larger or smaller buttons? BootstrapFX provides 5 additional classes for sizes. This include:" />
        <Label layoutX="10.0" layoutY="95.0">
            <graphic>
                <TextFlow>
                    <Text layoutX="61.0" layoutY="10.0" strokeType="OUTSIDE" strokeWidth="0.0" text="- " />
                    <Label styleClass="code" text=".btn-xs" />
                    <Text layoutX="10.0" layoutY="10.0" strokeType="OUTSIDE" strokeWidth="0.0" text=" : Renders extra small buttons. Basically having a width of 60px" />
                </TextFlow>
            </graphic>
            <VBox.margin> <Insets left="20.0" /> </VBox.margin>
        </Label>
        <Label layoutX="10.0" layoutY="878.0">
            <graphic>
                <TextFlow>
                    <Text layoutX="61.0" layoutY="10.0" strokeType="OUTSIDE" strokeWidth="0.0" text="- " />
                    <Label styleClass="code" text=".btn-sm" />
                    <Text layoutX="10.0" layoutY="10.0" strokeType="OUTSIDE" strokeWidth="0.0" text=" : Renders small sized buttons. Basically having a width of 80px" />
                </TextFlow>
            </graphic>
            <VBox.margin> <Insets left="20.0" /> </VBox.margin>
        </Label>
        <Label layoutX="10.0" layoutY="878.0">
            <graphic>
                <TextFlow>
                    <Text layoutX="61.0" layoutY="10.0" strokeType="OUTSIDE" strokeWidth="0.0" text="- " />
                    <Label styleClass="code" text=".btn-md" />
                    <Text layoutX="10.0" layoutY="10.0" strokeType="OUTSIDE" strokeWidth="0.0" text=" : Renders medium sized buttons. Basically having a width of 100px" />
                </TextFlow>
            </graphic>
            <VBox.margin> <Insets left="20.0" /> </VBox.margin>
        </Label>
        <Label layoutX="10.0" layoutY="902.0">
            <graphic>
                <TextFlow>
                    <Text layoutX="61.0" layoutY="10.0" strokeType="OUTSIDE" strokeWidth="0.0" text="- " />
                    <Label styleClass="code" text=".btn-lg" />
                    <Text layoutX="10.0" layoutY="10.0" strokeType="OUTSIDE" strokeWidth="0.0" text=" : Renders large buttons. Basically having a width of 120px" />
                </TextFlow>
            </graphic>
            <VBox.margin> <Insets left="20.0" /> </VBox.margin>
        </Label>
        <Label layoutX="10.0" layoutY="542.0">
            <graphic>
                <TextFlow>
                    <Text layoutX="61.0" layoutY="10.0" strokeType="OUTSIDE" strokeWidth="0.0" text="- " />
                    <Label styleClass="code" text=".btn-xl" />
                    <Text layoutX="10.0" layoutY="10.0" strokeType="OUTSIDE" strokeWidth="0.0" text=" : Renders extra large buttons. Basically having a width of 140px" />
                </TextFlow>
            </graphic>
            <VBox.margin> <Insets left="20.0" /> </VBox.margin>
        </Label>
        <Label layoutX="10.0" layoutY="583.0" styleClass="display-3" text="Examples" />
        <HBox layoutX="10.0" layoutY="626.0">
            <Button layoutX="10.0" layoutY="20.0" mnemonicParsing="false" text="btn-xs"> <styleClass> <String fx:value="btn-xs" /> <String fx:value="btn-outline-primary" /> </styleClass> </Button>
            <Button layoutX="10.0" layoutY="20.0" mnemonicParsing="false" text="btn-sm"> <styleClass> <String fx:value="btn-sm" /> <String fx:value="btn-outline-success" /> </styleClass> </Button>
            <Button layoutX="67.0" layoutY="20.0" mnemonicParsing="false" text="btn-md"> <styleClass> <String fx:value="btn-md" /> <String fx:value="btn-outline-info" /> </styleClass> </Button>
            <Button layoutX="10.0" layoutY="20.0" mnemonicParsing="false" text="btn-lg"> <styleClass> <String fx:value="btn-lg" /> <String fx:value="btn-outline-warning" /> </styleClass> </Button>
            <Button layoutX="67.0" layoutY="20.0" mnemonicParsing="false" text="btn-xl"> <styleClass> <String fx:value="btn-xl" /> <String fx:value="btn-outline-danger" /> </styleClass> </Button>
        </HBox>
        <Label layoutX="10.0" layoutY="621.0" text="JFoenix Buttons"> <styleClass> <String fx:value="display-2" /> <String fx:value="display" /> </styleClass> </Label>
        <Separator layoutX="10.0" layoutY="665.0" prefWidth="200.0" />
        <Label layoutX="10.0" layoutY="676.0" text="Also included are JFoenix buttons which provides 2 main button types as described in material design. Flat buttons and raised buttons." />
        <Label layoutX="10.0" layoutY="423.0" text="Normal/Flat JFoenix Buttons"> <styleClass> <String fx:value="display-2" /> <String fx:value="display" /> </styleClass> </Label>
        <HBox layoutX="10.0" layoutY="861.0">
            <JFXButton text="Default" />
            <JFXButton layoutX="10.0" layoutY="20.0" styleClass="btn-primary" text="Primary" />
            <JFXButton layoutX="10.0" layoutY="20.0" styleClass="btn-success" text="Success" />
            <JFXButton layoutX="79.0" layoutY="20.0" styleClass="btn-info" text="Info" />
            <JFXButton layoutX="148.0" layoutY="20.0" styleClass="btn-warning" text="Warning" />
            <JFXButton layoutX="217.0" layoutY="20.0" styleClass="btn-danger" text="Danger" />
        </HBox>
        <Label layoutX="10.0" layoutY="104.0" text="Outlined JFoenix Buttons"> <styleClass> <String fx:value="display-2" /> <String fx:value="display" /> </styleClass> </Label>
        <HBox layoutX="10.0" layoutY="147.0">
            <JFXButton layoutX="10.0" layoutY="20.0" styleClass="btn-outline-primary" text="Primary" />
            <JFXButton layoutX="10.0" layoutY="20.0" styleClass="btn-outline-success" text="Success" />
            <JFXButton layoutX="79.0" layoutY="20.0" styleClass="btn-outline-info" text="Info" />
            <JFXButton layoutX="148.0" layoutY="20.0" styleClass="btn-outline-warning" text="Warning" />
            <JFXButton layoutX="217.0" layoutY="20.0" styleClass="btn-outline-danger" text="Danger" />
        </HBox>
        <Label layoutX="10.0" layoutY="238.0" text="Raised JFoenix Buttons"> <styleClass> <String fx:value="display-2" /> <String fx:value="display" /> </styleClass> </Label>
        <Label layoutX="10.0" layoutY="680.0">
            <graphic>
                <TextFlow>
                    <Text strokeType="OUTSIDE" strokeWidth="0.0" text="By default, JFoenix buttons are flat. For a raised button effect, use the " />
                    <Label styleClass="code" text=".btn-raised" />
                    <Text layoutX="10.0" layoutY="10.0" strokeType="OUTSIDE" strokeWidth="0.0" text=" tag." />
                </TextFlow>
            </graphic>
        </Label>
        <FlowPane>
            <JFXButton styleClass="btn-raised" text="Default" />
            <JFXButton text="Primary"> <styleClass> <String fx:value="btn-primary" /> <String fx:value="btn-raised" /> </styleClass> </JFXButton>
            <JFXButton text="Success"> <styleClass> <String fx:value="btn-success" /> <String fx:value="btn-raised" /> </styleClass> </JFXButton>
            <JFXButton text="Info"> <styleClass> <String fx:value="btn-info" /> <String fx:value="btn-raised" /> </styleClass> </JFXButton>
            <JFXButton text="Warning"> <styleClass> <String fx:value="btn-warning" /> <String fx:value="btn-raised" /> </styleClass> </JFXButton>
            <JFXButton text="Danger"> <styleClass> <String fx:value="btn-danger" /> <String fx:value="btn-raised" /> </styleClass> </JFXButton>
            <JFXButton text="Primary"> <styleClass> <String fx:value="btn-outline-primary" /> <String fx:value="btn-raised" /> </styleClass> </JFXButton>
            <JFXButton text="Success"> <styleClass> <String fx:value="btn-outline-success" /> <String fx:value="btn-raised" /> </styleClass> </JFXButton>
            <JFXButton text="Info"> <styleClass> <String fx:value="btn-outline-info" /> <String fx:value="btn-raised" /> </styleClass> </JFXButton>
            <JFXButton text="Warning"> <styleClass> <String fx:value="btn-outline-warning" /> <String fx:value="btn-raised" /> </styleClass> </JFXButton>
            <JFXButton text="Danger"> <styleClass> <String fx:value="btn-outline-danger" /> <String fx:value="btn-raised" /> </styleClass> </JFXButton>
        </FlowPane>
        <VBox layoutX="10.0" layoutY="638.0" styleClass="blockquote">
            <Label styleClass="blockquote-heading" text="Raised Buttons" />
            <Label text="The raised button is a standard button that signify actions and seek to give depth to a mostly flat page." />
            <Label layoutX="30.0" layoutY="26.0" text="Flat Buttons"> <styleClass> <String fx:value="blockquote-heading" /> <String fx:value="display" /> </styleClass> </Label>
            <Label layoutX="30.0" layoutY="54.0" text="Flat buttons are used to reduce excessive layering. For example, flat buttons are usually used within elements that already have depth like cards or modals so that there aren't too many overlapping shadows." />
            <Label layoutX="30.0" layoutY="93.0" text="Rippler Effect"> <styleClass> <String fx:value="blockquote-heading" /> <String fx:value="display" /> </styleClass> </Label>
            <Label layoutX="30.0" layoutY="121.0" text="JFoenix buttons have an added rippler effect expanding accross the button upon a mouse click event. By default the rippler effect assumes the color WHITE." />
        </VBox>
        <Label layoutX="10.0" layoutY="1555.0" text="Rounded Buttons"> <styleClass> <String fx:value="display-2" /> <String fx:value="display" /> </styleClass> </Label>
        <Separator layoutX="10.0" layoutY="1599.0" prefWidth="200.0" />
        <Label layoutX="10.0" layoutY="1610.0">
            <graphic>
                <TextFlow>
                    <Text strokeType="OUTSIDE" strokeWidth="0.0" text="Add rounded corners to a Button using the " />
                    <Label styleClass="code" text=".btn-rounded" />
                    <Text layoutX="10.0" layoutY="10.0" strokeType="OUTSIDE" strokeWidth="0.0" text=" tag provided by BootstrapFX. This works for all Buttons - JavaFX and JFoenix Buttons" />
                </TextFlow>
            </graphic>
        </Label>
        <Label layoutX="10.0" layoutY="1675.0" styleClass="display-3" text="Examples" />
        <FlowPane>
            <Button mnemonicParsing="false" styleClass="btn-rounded" text="Default" />
            <Button mnemonicParsing="false" text="Primary"> <styleClass> <String fx:value="btn-primary" /> <String fx:value="btn-rounded" /> </styleClass> </Button>
            <Button mnemonicParsing="false" text="Success"> <styleClass> <String fx:value="btn-success" /> <String fx:value="btn-rounded" /> </styleClass> </Button>
            <Button mnemonicParsing="false" text="Info"> <styleClass> <String fx:value="btn-info" /> <String fx:value="btn-rounded" /> </styleClass> </Button>
            <Button mnemonicParsing="false" text="Warning"> <styleClass> <String fx:value="btn-warning" /> <String fx:value="btn-rounded" /> </styleClass> </Button>
            <Button mnemonicParsing="false" text="Danger"> <styleClass> <String fx:value="btn-danger" /> <String fx:value="btn-rounded" /> </styleClass> </Button>
            <Button mnemonicParsing="false" text="Primary"> <styleClass> <String fx:value="btn-outline-primary" /> <String fx:value="btn-rounded" /> </styleClass> </Button>
            <Button mnemonicParsing="false" text="Success"> <styleClass> <String fx:value="btn-outline-success" /> <String fx:value="btn-rounded" /> </styleClass> </Button>
            <Button mnemonicParsing="false" text="Info"> <styleClass> <String fx:value="btn-outline-info" /> <String fx:value="btn-rounded" /> </styleClass> </Button>
            <Button mnemonicParsing="false" text="Warning"> <styleClass> <String fx:value="btn-outline-warning" /> <String fx:value="btn-rounded" /> </styleClass> </Button>
            <Button mnemonicParsing="false" text="Danger"> <styleClass> <String fx:value="btn-outline-danger" /> <String fx:value="btn-rounded" /> </styleClass> </Button>
        </FlowPane>
        <Label layoutX="10.0" layoutY="136.0" text="Disabled State"> <styleClass> <String fx:value="display-2" /> <String fx:value="display" /> </styleClass> </Label>
        <Separator layoutX="10.0" layoutY="180.0" prefWidth="200.0" />
        <Label layoutX="10.0" layoutY="191.0">
            <graphic>
                <TextFlow>
                    <Text strokeType="OUTSIDE" strokeWidth="0.0" text="JavaFX makes buttons disabled by using the " />
                    <Label styleClass="code" text="button.setDisabled(true)" />
                    <Text layoutX="10.0" layoutY="10.0" strokeType="OUTSIDE" strokeWidth="0.0" text=" boolean method to any Button control." />
                </TextFlow>
            </graphic>
        </Label>
        <Label layoutX="10.0" layoutY="256.0" styleClass="display-3" text="Examples" />
        <HBox layoutX="10.0" layoutY="299.0">
            <Button disable="true" mnemonicParsing="false" text="Default" />
            <Button disable="true" layoutX="10.0" layoutY="20.0" mnemonicParsing="false" styleClass="btn-primary" text="Primary" />
            <Button disable="true" layoutX="10.0" layoutY="20.0" mnemonicParsing="false" styleClass="btn-success" text="Success" />
            <Button disable="true" layoutX="67.0" layoutY="20.0" mnemonicParsing="false" styleClass="btn-info" text="Info" />
            <Button disable="true" layoutX="10.0" layoutY="20.0" mnemonicParsing="false" styleClass="btn-warning" text="Warning" />
            <Button disable="true" layoutX="67.0" layoutY="20.0" mnemonicParsing="false" styleClass="btn-danger" text="Danger" />
        </HBox>
        <VBox layoutX="10.0" layoutY="541.0" styleClass="blockquote">
            <Label text="Generally for a disabled button, focus traversable is set to false. Hover and Pressed styles wont apply to this Control item. Also a custom image for cursor on mouse hover is provided." />
        </VBox>
        <Label layoutX="10.0" layoutY="10.0" text="ToggleButtons"> <styleClass> <String fx:value="h1" /> <String fx:value="heading" /> </styleClass></Label>
        <Separator layoutX="10.0" layoutY="47.0" prefWidth="200.0" />
        <Label layoutX="10.0" layoutY="58.0" text="Two or more buttons (ToggleButtons) can be combined into a group where only one button at atime can be selected, or where no selection is required. BootstrapFX comes shipped with several predefined ToggleButton styles, each serving its own semantic purpose, with a few extras thrown in for more visualization." />
        <Label layoutX="10.0" layoutY="482.0" text="ToggleButton Tags"> <styleClass> <String fx:value="display-2" /> <String fx:value="display" /> </styleClass> </Label>
        <Separator layoutX="10.0" layoutY="526.0" prefWidth="200.0" />
        <Label layoutX="10.0" layoutY="191.0">
            <graphic>
                <TextFlow>
                    <Text strokeType="OUTSIDE" strokeWidth="0.0" text="There is no need to add the " />
                    <Label styleClass="code" text=".toggle-button" />
                    <Text layoutX="10.0" layoutY="10.0" strokeType="OUTSIDE" strokeWidth="0.0" text=" class as it is automatically added to the " />
                    <Label layoutX="35.0" layoutY="11.0" styleClass="text-bold" text="ToggleButton" />
                    <Text layoutX="81.0" layoutY="10.0" strokeType="OUTSIDE" strokeWidth="0.0" text=" control. However, you can use the contextual classes to apply a slightly different rendering to any " />
                    <Label layoutX="463.0" layoutY="11.0" styleClass="text-bold" text="ToggleButton." />
                </TextFlow>
            </graphic>
        </Label>
        <Label layoutX="10.0" layoutY="433.0">
            <graphic>
                <TextFlow>
                    <Label layoutX="382.0" layoutY="10.0" text="This includes the: " />
                    <Label styleClass="code" text=".toggle-primary, .toggle-success, .toggle-info, .toggle-warning" />
                    <Label text=" and " />
                    <Label styleClass="code" text=".toggle-danger" />
                    <Label layoutX="484.0" layoutY="10.0" text=" classes." />
                </TextFlow>
            </graphic>
        </Label>
        <Label layoutX="10.0" layoutY="256.0" styleClass="display-3" text="Examples" />
        <HBox>
            <ToggleButton mnemonicParsing="false" text="Default"> <toggleGroup> <ToggleGroup fx:id="toggle_1" /> </toggleGroup> </ToggleButton>
            <ToggleButton mnemonicParsing="false" styleClass="toggle-primary" text="Primary" toggleGroup="$toggle_1" />
            <ToggleButton mnemonicParsing="false" styleClass="toggle-success" text="Success" toggleGroup="$toggle_1" />
            <ToggleButton mnemonicParsing="false" styleClass="toggle-info" text="Info" toggleGroup="$toggle_1" />
            <ToggleButton mnemonicParsing="false" styleClass="toggle-warning" text="Warning" toggleGroup="$toggle_1" />
            <ToggleButton mnemonicParsing="false" styleClass="toggle-danger" text="Danger" toggleGroup="$toggle_1" />
        </HBox>
        <VBox layoutX="10.0" layoutY="569.0" styleClass="blockquote">
            <Label styleClass="blockquote-heading" text="ToggleButton Sizes" />
            <Label layoutX="30.0" layoutY="54.0">
                <graphic>
                    <TextFlow>
                        <Text layoutX="61.0" layoutY="10.0" strokeType="OUTSIDE" strokeWidth="0.0" text="For larger or smaller togglebuttons, use provided classes " />
                        <Label layoutX="10.0" layoutY="28.0" styleClass="code" text=".btn-xs, .btn-sm, .btn-md, .btn-lg" />
                        <Text layoutX="10.0" layoutY="10.0" strokeType="OUTSIDE" strokeWidth="0.0" text=" and " />
                        <Label layoutX="91.0" layoutY="11.0" styleClass="code" text=".btn-xl" />
                        <Text layoutX="10.0" layoutY="10.0" strokeType="OUTSIDE" strokeWidth="0.0" text=" for additional sizes." />
                    </TextFlow>
                </graphic>
            </Label>
        </VBox>
        <Label layoutX="10.0" layoutY="946.0" text="JFoenix ToggleButtons"> <styleClass> <String fx:value="display-2" /> <String fx:value="display" /> </styleClass> </Label>
        <Separator layoutX="10.0" layoutY="990.0" prefWidth="200.0" />
        <Label layoutX="10.0" layoutY="1001.0" text="BootstrapFX also comes shipped with custom styling for JFoenix ToggleButtons. You can change their visualization by using the ToggleButton contextual color classes." />
        <Label layoutX="10.0" layoutY="454.0">
            <graphic>
                <TextFlow>
                    <Label layoutX="382.0" layoutY="10.0" text="This includes the: " />
                    <Label styleClass="code" text=".toggle-primary, .toggle-success, .toggle-info, .toggle-warning" />
                    <Label text=" and " />
                    <Label styleClass="code" text=".toggle-danger" />
                    <Label layoutX="484.0" layoutY="10.0" text=" classes." />
                </TextFlow>
            </graphic>
        </Label>
        <Label layoutX="10.0" layoutY="857.0" styleClass="display-3" text="Examples" />
        <FlowPane>
            <JFXToggleButton text="Default" toggleGroup="$toggle_1" />
            <JFXToggleButton styleClass="toggle-primary" text="Primary" toggleGroup="$toggle_1" />
            <JFXToggleButton styleClass="toggle-success" text="Success" toggleGroup="$toggle_1" />
            <JFXToggleButton styleClass="toggle-warning" text="Warning" toggleGroup="$toggle_1" />
            <JFXToggleButton styleClass="toggle-info" text="Info" toggleGroup="$toggle_1" />
            <JFXToggleButton styleClass="toggle-danger" text="Danger" toggleGroup="$toggle_1" />
        </FlowPane>
        <Label layoutX="10.0" layoutY="1748.0" text="Radio Buttons"> <styleClass> <String fx:value="h1" /> <String fx:value="heading" /> </styleClass> </Label>
        <Separator layoutX="10.0" layoutY="1820.0" prefWidth="200.0" />
        <Label layoutX="10.0" layoutY="1831.0" text="Typically RadioButtons are combined into a group where only one button at a time can be selected. This behavior distinguishes them from toggle buttons, because all toggle buttons in a group can be in a deselected state. BootstrapFX provides several predefined radiobutton styles, with a few extras thrown in for more visualization." />
        <Label layoutX="10.0" layoutY="1909.0" text="RadioButton Tags"> <styleClass> <String fx:value="display-2" /> <String fx:value="display" /> </styleClass> </Label>
        <Separator layoutX="10.0" layoutY="1953.0" prefWidth="200.0" />
        <Label layoutX="10.0" layoutY="1964.0">
            <graphic>
                <TextFlow>
                    <Text strokeType="OUTSIDE" strokeWidth="0.0" text="There is no need to add the " />
                    <Label styleClass="code" text=".radio-button" />
                    <Text layoutX="10.0" layoutY="10.0" strokeType="OUTSIDE" strokeWidth="0.0" text=" class as it is automatically added to the " />
                    <Label layoutX="35.0" layoutY="11.0" styleClass="text-bold" text="RadioButton" />
                    <Text layoutX="81.0" layoutY="10.0" strokeType="OUTSIDE" strokeWidth="0.0" text=" control. However, you can use the contextual classes to apply a slightly different rendering to any " />
                    <Label layoutX="463.0" layoutY="11.0" styleClass="text-bold" text="RadioButton." />
                </TextFlow>
            </graphic>
        </Label>
        <Label layoutX="10.0" layoutY="2006.0">
            <graphic>
                <TextFlow>
                    <Label layoutX="382.0" layoutY="10.0" text="This includes the: " />
                    <Label styleClass="code" text=".radio-primary, .radio-success, .radio-info, .radio-warning" />
                    <Label text=" and " />
                    <Label styleClass="code" text=".radio-danger" />
                    <Label layoutX="484.0" layoutY="10.0" text=" classes." />
                </TextFlow>
            </graphic>
        </Label>
        <Label layoutX="10.0" layoutY="2045.0" styleClass="display-3" text="Examples" />
        <FlowPane>
            <RadioButton mnemonicParsing="false" text="Default"> <toggleGroup> <ToggleGroup fx:id="radio_1" /> </toggleGroup> </RadioButton>
            <RadioButton mnemonicParsing="false" styleClass="radio-primary" text="Primary" toggleGroup="$radio_1" />
            <RadioButton mnemonicParsing="false" styleClass="radio-success" text="Success" toggleGroup="$radio_1" />
            <RadioButton mnemonicParsing="false" styleClass="radio-info" text="Info" toggleGroup="$radio_1" />
            <RadioButton mnemonicParsing="false" styleClass="radio-warning" text="Warning" toggleGroup="$radio_1" />
            <RadioButton mnemonicParsing="false" styleClass="radio-danger" text="Danger" toggleGroup="$radio_1" />
        </FlowPane>
        <Label layoutX="10.0" layoutY="2229.0" text="JFoenix RadioButtons"> <styleClass> <String fx:value="display-2" /> <String fx:value="display" /> </styleClass> </Label>
        <Separator layoutX="10.0" layoutY="2273.0" prefWidth="200.0" />
        <Label layoutX="10.0" layoutY="2284.0" text="BootstrapFX also comes shipped with custom styling for JFoenix RadioButtons. You can change their visualization by using the RadioButton contextual color classes." />
        <Label layoutX="10.0" layoutY="2323.0">
            <graphic>
                <TextFlow>
                    <Label layoutX="382.0" layoutY="10.0" text="This includes the: " />
                    <Label styleClass="code" text=".radio-primary, .radio-success, .radio-info, .radio-warning" />
                    <Label text=" and " />
                    <Label styleClass="code" text=".radio-danger" />
                    <Label layoutX="484.0" layoutY="10.0" text=" classes." />
                </TextFlow>
            </graphic>
        </Label>
        <Label layoutX="10.0" layoutY="2362.0" styleClass="display-3" text="Examples" />
        <FlowPane>
            <JFXRadioButton text="Default" toggleGroup="$radio_1" />
            <JFXRadioButton styleClass="radio-primary" text="Primary" toggleGroup="$radio_1" />
            <JFXRadioButton styleClass="radio-success" text="Success" toggleGroup="$radio_1" />
            <JFXRadioButton styleClass="radio-info" text="Info" toggleGroup="$radio_1" />
            <JFXRadioButton styleClass="radio-warning" text="Warning" toggleGroup="$radio_1" />
            <JFXRadioButton styleClass="radio-danger" text="Danger" toggleGroup="$radio_1" />
        </FlowPane>
        <Label layoutX="10.0" layoutY="10.0" text="CheckBoxes"> <styleClass> <String fx:value="h1" /> <String fx:value="heading" /> </styleClass> </Label>
        <Separator layoutX="10.0" layoutY="47.0" prefWidth="200.0" />
        <Label layoutX="10.0" layoutY="58.0" text="The checkbox is a component used to allow a user to make multiple choices which is broadly used in forms and surveys. Checkboxes are used to select one or several options in a list, while radio (option) buttons are for selecting one option from many." />
        <Label layoutX="10.0" layoutY="114.0" text="CheckBox Tags"> <styleClass> <String fx:value="display-2" /> <String fx:value="display" /> </styleClass> </Label>
        <Separator layoutX="10.0" layoutY="158.0" prefWidth="200.0" />
        <Label layoutX="10.0" layoutY="169.0">
            <graphic>
                <TextFlow>
                    <Text strokeType="OUTSIDE" strokeWidth="0.0" text="There is no need to add the " />
                    <Label styleClass="code" text=".check-box" />
                    <Text layoutX="10.0" layoutY="10.0" strokeType="OUTSIDE" strokeWidth="0.0" text=" tag as it is automatically added to the " />
                    <Label layoutX="35.0" layoutY="11.0" styleClass="text-bold" text="CheckBox" />
                    <Text layoutX="81.0" layoutY="10.0" strokeType="OUTSIDE" strokeWidth="0.0" text=" and the " />
                    <Label layoutX="467.0" layoutY="11.0" styleClass="text-bold" text="JFXCheckBox" />
                    <Text layoutX="527.0" layoutY="10.0" strokeType="OUTSIDE" strokeWidth="0.0" text=" controls." />
                </TextFlow>
            </graphic>
        </Label>
        <Label layoutX="10.0" layoutY="193.0" styleClass="display-3" text="Example" />
        <FlowPane>
            <CheckBox mnemonicParsing="false" text="Grapes" />
            <JFXCheckBox text="Bananas" />
            <CheckBox allowIndeterminate="true" layoutX="10.0" layoutY="25.0" mnemonicParsing="false" text="Oranges" />
            <JFXCheckBox allowIndeterminate="true" layoutX="158.0" layoutY="26.0" text="Apples" />
        </FlowPane>
        <Label layoutX="10.0" layoutY="3178.0" text="ChoiceBoxes"> <styleClass> <String fx:value="h1" /> <String fx:value="heading" /> </styleClass> </Label>
        <Separator layoutX="10.0" layoutY="3250.0" prefWidth="200.0" />
        <Label layoutX="10.0" layoutY="3261.0" text="The choicebox is a component used to presenti the user with a relatively small set of predefined choices from which they may choose from." />
        <Label layoutX="10.0" layoutY="3372.0">
            <graphic>
                <TextFlow>
                    <Text strokeType="OUTSIDE" strokeWidth="0.0" text="There is no need to add the " />
                    <Label styleClass="code" text=".choice-box" />
                    <Text layoutX="10.0" layoutY="10.0" strokeType="OUTSIDE" strokeWidth="0.0" text=" tag as it is automatically added to a " />
                    <Label layoutX="35.0" layoutY="11.0" styleClass="text-bold" text="ChoiceBox" />
                    <Text layoutX="527.0" layoutY="10.0" strokeType="OUTSIDE" strokeWidth="0.0" text=" control." />
                </TextFlow>
            </graphic>
        </Label>
        <Label layoutX="10.0" layoutY="3413.0" styleClass="display-3" text="Example" />
        <FlowPane layoutX="10.0" layoutY="3441.0">
            <ChoiceBox fx:id="names" prefWidth="150.0" />
        </FlowPane>
    </VBox>
</ScrollPane>